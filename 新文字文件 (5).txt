#include SevSeg.h
SevSeg sevseg; Instantiate a seven segment controller object

void setup() {
  byte numDigits = 4;
  byte digitPins[] = {5,4,3,2};
  byte segmentPins[] = {11,12,13,14,15,16,17};
  bool resistorsOnSegments = false;  'false' means resistors are on digit pins
  byte hardwareConfig = COMMON_CATHODE;  See README.md for options
  sevseg.begin(hardwareConfig, numDigits, digitPins, segmentPins, resistorsOnSegments);
  sevseg.setBrightness(90);
  pinMode(6,INPUT);
  pinMode(7,INPUT);
}

void loop() 
{
  
  static unsigned long timer = millis();
  static int deciSeconds = 0;
  boolean val=digitalRead(6);
  boolean Pin7=digitalRead(7);
  if(val)
  {
    sevseg.setNumber(0000, 3);
        sevseg.refreshDisplay();
        if(Pin7==HIGH)
        deciSeconds=2400;
        else
        deciSeconds=0;
        
  }
  else if(Pin7==HIGH)
  {
 sevseg.setNumber(deciSeconds, 3);
  if (millis() - timer = 300) 
  
  {
    timer += 300;
    deciSeconds--; 
    if (deciSeconds%100 == 99) 
    { 
      deciSeconds=deciSeconds-40;
    }
    else
    {
      deciSeconds=deciSeconds;
    }
  }
   if (deciSeconds == 0)
    deciSeconds =2400 ;
 
  sevseg.refreshDisplay();  Must run repeatedly
  }
  else
  {
 sevseg.setNumber(deciSeconds, 3);
  if (millis() - timer = 300) 
  {
    timer += 300;
    deciSeconds++; 
    if (deciSeconds%100 == 59) 
    { 
      deciSeconds=deciSeconds+41;
    }
    else
    {
      deciSeconds=deciSeconds;
    }
   if (deciSeconds == 2400)
    deciSeconds =0 ;
  }
 
  sevseg.refreshDisplay();  Must run repeatedly
  }
  }